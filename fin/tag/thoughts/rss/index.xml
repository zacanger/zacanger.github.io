<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[undefined - angr]]></title><description><![CDATA[writings from zac anger]]></description><link>http://blog.zacanger.com/</link><generator>Ghost</generator><lastBuildDate>Sat, 18 Nov 2017 16:01:42 GMT</lastBuildDate><atom:link href="http://blog.zacanger.com/tag/undefined/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Recommendations For New Web Devs]]></title><description><![CDATA[<h1 id="some-recommendations-for-new-web-developers">Some Recommendations for New (Web) Developers</h1>
<p>Some of these thoughts probably apply to all developers. Some don&#39;t.</p>
<ol>
<li>Learn an editor. It doesn&#39;t matter which editor. Just learn one. Be good at
it. I don&#39;t care if you use Visual Studio or Emacs or whatever. Be really
good at the thing you pick, though.</li>
<li>Learn enough <code>vi</code> to get by. You <em>will</em> need to know it, at some point. At
the very least, learn how to enter text, move around, save, quit, and quit
without saving.</li>
<li>Install <code>jq</code> (build it from source if you want the newest hotness; otherwise
install it with your package manager). Don&#39;t install the <code>jq</code> clones written
in other languages (not C) &mdash; most of them are slow and/or only
half-finished.</li>
<li>Get comfortable with Bash. You don&#39;t have to be great with it, just know
enough to get by. It doesn&#39;t matter what shell you actually use (Zsh, Ksh,
Bash, Sh, Dash, Ash, PowerShell &mdash; I don&#39;t care, whatever). If you&#39;re
writing stuff that&#39;s going to be run by other people, ever, write it in Bash.
If you&#39;re writing stuff that may or may not be run on a server, write it in
POSIX-compliant <code>sh</code>.</li>
<li>Spend some time on Twitter. Facebook is for finding out how your
middle-school best friend&#39;s back surgery went. LinkedIn is for collecting
recruiter spam just in case. Twitter is for following people who say things
that matter, so get on Twitter.</li>
<li>No one cares if you can&#39;t afford a Mac. Macs aren&#39;t great computers, they&#39;re
okay computers that are very expensive. If you can&#39;t afford a Mac, try Linux
(I recommend Debian with the XFCE desktop environment, but try other things
too if you want!). If you don&#39;t have time for that, Windows is also okay
(just remember to tell your editor and Git to use UNIX-style line-endings).</li>
<li>Don&#39;t work (for your employer) on the weekends. Work on side projects, if you
want. Or do other things. Go out to brunch. Climb a mountain. Learn a Primus
song on bass. Get drunk. Just don&#39;t work for the person who pays you to work
during the week. If they seem to expect you to be working when you&#39;re not at
work, start looking for another job.</li>
<li>Learn other languages. HTML and CSS are not programming languages, so they
don&#39;t count. JS is actually a really great language (so don&#39;t take shit from
Java or C# developers who bitch about it!), but it&#39;s only one language. Learn
another language that helps you think about what you do in a different way.
Scheme (specifically, Racket) is a really nice one to start with. Haskell is
interesting (or some other ML-type language, like OCaml or Purescript). C is
also really useful to know, even if you only ever learn enough to write a
basic shell or something.</li>
<li>Figure out your own method for managing tasks. Chances are, you&#39;ll work for
more than one company over the next few years. Your employer might be really
into Jira, or Trello, or whatever, or they might change their mind four times
a year, but either way, getting heavily invested in one tool is not a great
idea. Use their thing, but also figure out what works for you. I keep track
of tasks for work in plain Markdown files, and I use
<a href="http://npm.im/lilnote">lilnote</a> for personal tasks. Just find a thing you
like and stick with it.</li>
<li>Make time for personal development. Including on the clock. If your employer
doesn&#39;t like that you spend a half hour every morning catching up on what new
flags Chromium shipped, or competing on Codewars, or whatever other technical
thing happens to really interest you but might also benefit your company,
start looking for another job.</li>
</ol>
]]></description><link>/2017/recommendations-for-new-web-devs.html</link><guid isPermaLink="true">/2017/recommendations-for-new-web-devs.html</guid><category><![CDATA[devmtn]]></category><category><![CDATA[thoughts]]></category><dc:creator><![CDATA[zac anger]]></dc:creator><pubDate>Sun, 26 Mar 2017 22:00:00 GMT</pubDate></item></channel></rss>